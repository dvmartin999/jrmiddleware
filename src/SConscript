#***********           LICENSE HEADER   *******************************
# JR Middleware
# Copyright (c)  2008-2019, DeVivo AST, Inc
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without 
# modification, are permitted provided that the following conditions are met:
# 
#        Redistributions of source code must retain the above copyright notice, 
# this list of conditions and the following disclaimer.
# 
#        Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
#        Neither the name of the copyright holder nor the names of 
# its contributors may be used to endorse or promote products derived from 
# this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE 
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
# POSSIBILITY OF SUCH DAMAGE.
# *********************  END OF LICENSE ***********************************
 
# Import base environment
import os
Import( 'baseEnv' )

# Here's where the good stuff starts...
API_Files = [
    'JuniorAPI.cpp',
    'JrSockets.cpp',
    'JuniorMgr.cpp',
    'OS.cpp',
    'JrLogger.cpp',
    'XmlConfig.cpp',
    'JUDPTransport.cpp',
    'JSerial.cpp',
    'ChecksumCRC.cpp',
    'TCPConnection.cpp',
    'JTCPTransport.cpp',
    'tinyxml/tinyxml.cpp',
    'tinyxml/tinyxmlerror.cpp',
    'tinyxml/tinyxmlparser.cpp'
]

# Define multiple environments for building and using
# the library as a Shared Library (dll or so).
dllenv = baseEnv.Clone()
dllenv.Append( CCFLAGS = ['-D__BUILD_DLL__'] ) 
dllenv.Append( LINKFLAGS = ['/DEF:Junior.DEF'] )
dllenv['SHOBJPREFIX'] = 'sh'
ocuenv = baseEnv.Clone()
ocuenv.Append( CCFLAGS = ['-D__USE_DLL__'] )                 

# On Windows, we generate a DLL for the API
# as well as a executable for the Run-Time Engine.
# The RTE must be linked to a static library, however,
# so we need to build both a static and a shared library.
# These are given different names to prevent confusion,
# but only the DLL (and associated lib) are intended 
# for release.
if os.name == "nt":

    apilib = dllenv.SharedLibrary( target = 'Junior',
                                   source = API_Files )
                                                                
    rteapp = baseEnv.Program( target = 'JuniorRTE',
							  source = ['JuniorRTE.cpp'] + API_Files,
                              LIBS = baseEnv[ 'extra_libs' ] )
							  
    baseEnv.Install( baseEnv['INSTALL_BINDIR'], 'Junior.dll' )							  
						
else:

    apilib = baseEnv.Library(  target = 'Junior',
                               source = API_Files )
                           
    rteapp = baseEnv.Program( target = 'JuniorRTE',
							  source = 'JuniorRTE.cpp',
							  LIBS = ['Junior', baseEnv[ 'extra_libs' ]] )
                           

baseEnv.Install( baseEnv['INSTALL_LIBDIR'], apilib )
baseEnv.Install( baseEnv['INSTALL_BINDIR'], rteapp )
baseEnv.Install( baseEnv['INSTALL_BINDIR'], 'jr_config.xml' )